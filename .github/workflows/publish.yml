name: Publish to GitHub Pages

on:
  workflow_dispatch:
    
env:
  BUILD_TYPE: Release

jobs:

  build_web:
  
    name: Build (Web)
    runs-on: ubuntu-latest
  
    steps:
        
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        
    - name: Install prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -y libpulse-dev libgl1-mesa-dev
  
    - name: Cache LLVM host
      id: cache-llvm-host
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/build_llvm
        key: web-cache-llvm-host
  
    - name: Build LLVM host
      if: steps.cache-llvm-host.outputs.cache-hit != 'true'
      run: |
        wget -q https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.0/llvm-project-16.0.0.src.tar.xz
        tar -xf llvm-project-16.0.0.src.tar.xz
        cmake -B ${{github.workspace}}/build_llvm -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLLVM_TARGETS_TO_BUILD=WebAssembly -DLLVM_ENABLE_PROJECTS="clang" -S llvm-project-16.0.0.src/llvm
        export CMAKE_BUILD_PARALLEL_LEVEL=$(nproc)
        cmake --build ${{github.workspace}}/build_llvm --config ${{env.BUILD_TYPE}} -- llvm-tblgen
        cmake --build ${{github.workspace}}/build_llvm --config ${{env.BUILD_TYPE}} -- clang-tblgen
      
    - name: Set up emsdk
      run: |
        git clone https://github.com/emscripten-core/emsdk.git ${{github.workspace}}/emsdk
        ${{github.workspace}}/emsdk/emsdk install 3.1.31
        ${{github.workspace}}/emsdk/emsdk activate 3.1.31
  
    - name: Configure
      run: |
        source ${{github.workspace}}/emsdk/emsdk_env.sh
        emcmake cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLLVM_TABLEGEN=${{github.workspace}}/build_llvm/bin/llvm-tblgen -DCLANG_TABLEGEN=${{github.workspace}}/build_llvm/bin/clang-tblgen
    
    - name: Build
      run: |
        export CMAKE_BUILD_PARALLEL_LEVEL=$(nproc)
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target Ardens
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target ArdensPlayer
        mkdir ${{github.workspace}}/Ardens_web
        
    - name: Assemble folder
      run: |
        cp ${{github.workspace}}/build/Ardens.js ${{github.workspace}}/Ardens_web
        cp ${{github.workspace}}/build/Ardens.wasm ${{github.workspace}}/Ardens_web
        cp ${{github.workspace}}/build/ArdensPlayer.js ${{github.workspace}}/Ardens_web
        cp ${{github.workspace}}/build/ArdensPlayer.wasm ${{github.workspace}}/Ardens_web
        cp ${{github.workspace}}/src/Ardens.html ${{github.workspace}}/Ardens_web/index.html
        cp ${{github.workspace}}/src/ArdensPlayer.html ${{github.workspace}}/Ardens_web/player.html
        cd ${{github.workspace}}/Ardens_web
        
    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        folder: ${{github.workspace}}/Ardens_web
